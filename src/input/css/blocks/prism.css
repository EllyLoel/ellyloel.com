/**
 * MIT License
 * Copyright (c) 2018 Sarah Drasner
 * Sarah Drasner's [@sdras] Night Owl & Light Owl
 * Ported by Sara vieria [@SaraVieira] https://github.com/SaraVieira/prism-theme-night-owl
 */

:is(pre, code)[class*="language-"]::selection,
:is(pre, code)[class*="language-"] ::selection {
	background: #e0e0e0;
	text-shadow: none;
}

@media print {
	:is(code, pre)[class*="language-"] {
		text-shadow: none;
	}
}

/* Code blocks */
:is(pre[class*="language-"]) {
	border: var(--border-size-2) solid var(--accent-border);
	border-radius: 0.3em;
	margin: 0.5em 0;
	overflow: auto;
	padding: 1em;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
	background: #fbfbfb;
	color: black;
}

:not(pre) > code[class*="language-"] {
	border-radius: 0.3em;
	padding: 0.1em;
	white-space: normal;
}

.token:is(.comment, .prolog, .cdata) {
	color: rgb(152 159 177);
}

:is(.token.punctuation) {
	color: rgb(153 76 195);
}

:is(.namespace) {
	color: rgb(12 150 155);
}

:is(.token.deleted) {
	color: rgb(239 83 80 / 56%);
}

.token:is(.symbol, .operator, .keyword, .property) {
	color: rgb(12 150 155);
}

:is(.token.tag) {
	color: rgb(153 76 195);
}

:is(.token.boolean) {
	color: rgb(188 84 84);
}

:is(.token.number) {
	color: rgb(170 9 130);
}

.token:is(.constant, .builtin, .string, .url, .entity, .char),
:is(.language-css, .style) .token.string {
	color: rgb(72 118 214);
}

.token:is(.selector, .function, .doctype) {
	color: rgb(153 76 195);
}

.token:is(.attr-name, .inserted) {
	color: rgb(72 118 214);
}

.token:is(.class-name, .atrule, .attr-value) {
	color: rgb(17 17 17);
}

.token:is(.regex, .important, .variable) {
	color: rgb(201 103 101);
}

.token:is(.important, .bold) {
	font-weight: bold;
}

/* stylelint-disable-next-line block-no-empty */
:is(.token.italic) {
}

@media (prefers-color-scheme: dark) {
	:is(pre, code)[class*="language-"]::selection,
	:is(pre, code)[class*="language-"] ::selection {
		background: rgb(29 59 83 / 99%);
		text-shadow: none;
	}

	:not(pre) > code[class*="language-"],
	pre[class*="language-"] {
		background: #011627;
		color: white;
	}

	.token:is(.comment, .prolog, .cdata) {
		color: rgb(99 119 119);
	}

	:is(.token.punctuation) {
		color: rgb(199 146 234);
	}

	:is(.namespace) {
		color: rgb(178 204 214);
	}

	:is(.token.deleted) {
		color: rgb(239 83 80 / 56%);
	}

	.token:is(.symbol, .property) {
		color: rgb(128 203 196);
	}

	.token:is(.tag, .operator, .keyword) {
		color: rgb(127 219 202);
	}

	:is(.token.boolean) {
		color: rgb(255 88 116);
	}

	:is(.token.number) {
		color: rgb(247 140 108);
	}

	.token:is(.constant, .function, .builtin, .char) {
		color: rgb(130 170 255);
	}

	.token:is(.selector, .doctype) {
		color: rgb(199 146 234);
	}

	.token:is(.attr-name, .inserted) {
		color: rgb(173 219 103);
	}

	.token:is(.constant, .builtin, .string, .url, .entity, .char),
	:is(.language-css, .style) .token.string {
		color: rgb(173 219 103);
	}

	.token:is(.class-name, .atrule, .attr-value) {
		color: rgb(255 203 139);
	}

	.token:is(.regex, .important, .variable) {
		color: rgb(214 222 235);
	}
}

[data-selected-color-scheme="light"] {
	:is(pre, code)[class*="language-"]::selection,
	:is(pre, code)[class*="language-"] ::selection {
		background: #e0e0e0;
		text-shadow: none;
	}

	:not(pre) > code[class*="language-"],
	pre[class*="language-"] {
		background: #fbfbfb;
		color: white;
	}

	.token:is(.comment, .prolog, .cdata) {
		color: rgb(152 159 177);
	}

	:is(.token.punctuation) {
		color: rgb(153 76 195);
	}

	:is(.namespace) {
		color: rgb(12 150 155);
	}

	:is(.token.deleted) {
		color: rgb(239 83 80 / 56%);
	}

	.token:is(.symbol, .operator, .keyword, .property) {
		color: rgb(12 150 155);
	}

	:is(.token.tag) {
		color: rgb(153 76 195);
	}

	:is(.token.boolean) {
		color: rgb(188 84 84);
	}

	:is(.token.number) {
		color: rgb(170 9 130);
	}

	.token:is(.constant, .builtin, .string, .url, .entity, .char),
	:is(.language-css, .style) .token.string {
		color: rgb(72 118 214);
	}

	.token:is(.selector, .function, .doctype) {
		color: rgb(153 76 195);
	}

	.token:is(.attr-name, .inserted) {
		color: rgb(72 118 214);
	}

	.token:is(.class-name, .atrule, .attr-value) {
		color: rgb(17 17 17);
	}

	.token:is(.regex, .important, .variable) {
		color: rgb(201 103 101);
	}
}

[data-selected-color-scheme="dark"] {
	:is(pre, code)[class*="language-"]::selection,
	:is(pre, code)[class*="language-"] ::selection {
		background: rgb(29 59 83 / 99%);
		text-shadow: none;
	}

	:not(pre) > code[class*="language-"],
	pre[class*="language-"] {
		background: #011627;
		color: white;
	}

	.token:is(.comment, .prolog, .cdata) {
		color: rgb(99 119 119);
	}

	:is(.token.punctuation) {
		color: rgb(199 146 234);
	}

	:is(.namespace) {
		color: rgb(178 204 214);
	}

	:is(.token.deleted) {
		color: rgb(239 83 80 / 56%);
	}

	.token:is(.symbol, .property) {
		color: rgb(128 203 196);
	}

	.token:is(.tag, .operator, .keyword) {
		color: rgb(127 219 202);
	}

	:is(.token.boolean) {
		color: rgb(255 88 116);
	}

	:is(.token.number) {
		color: rgb(247 140 108);
	}

	.token:is(.constant, .function, .builtin, .char) {
		color: rgb(130 170 255);
	}

	.token:is(.selector, .doctype) {
		color: rgb(199 146 234);
	}

	.token:is(.attr-name, .inserted) {
		color: rgb(173 219 103);
	}

	.token:is(.constant, .builtin, .string, .url, .entity, .char),
	:is(.language-css, .style) .token.string {
		color: rgb(173 219 103);
	}

	.token:is(.class-name, .atrule, .attr-value) {
		color: rgb(255 203 139);
	}

	.token:is(.regex, .important, .variable) {
		color: rgb(214 222 235);
	}
}

@media screen and (-ms-high-contrast: active) and (forced-colors: active) {
	:is(code, pre)[class*="language-"] {
		background: window;
		color: windowText;
	}

	:not(pre) > code[class*="language-"],
	pre[class*="language-"] {
		background: window;
	}

	:is(.token.important) {
		background: highlight;
		color: window;
		font-weight: normal;
	}

	.token:is(.atrule, .attr-value, .function, .keyword, .operator, .selector) {
		font-weight: bold;
	}

	.token:is(
			.attr-value,
			.comment,
			.doctype,
			.function,
			.keyword,
			.operator,
			.property,
			.string
		) {
		color: highlight;
	}

	.token:is(.attr-value, .url) {
		font-weight: normal;
	}
}
