diff --git a/node_modules/@11ty/eleventy-plugin-vite/.eleventy.js b/node_modules/@11ty/eleventy-plugin-vite/.eleventy.js
index e5f7e93..82d9de1 100644
--- a/node_modules/@11ty/eleventy-plugin-vite/.eleventy.js
+++ b/node_modules/@11ty/eleventy-plugin-vite/.eleventy.js
@@ -17,9 +17,10 @@ module.exports = function(eleventyConfig, options = {}) {
   eleventyConfig.ignores.add(publicDir);
 
   // Use for-free passthrough copy on the public directory
-  let passthroughCopyObject = {};
-  passthroughCopyObject[`${publicDir}/**`] = "/"
-  eleventyConfig.addPassthroughCopy(passthroughCopyObject);
+  // let passthroughCopyObject = {};
+  // passthroughCopyObject[`${publicDir}/**`] = "/"
+  // eleventyConfig.addPassthroughCopy(passthroughCopyObject);
+  eleventyConfig.addPassthroughCopy(`${publicDir}/**`);
 
   // Add temp folder to the ignores
   eleventyConfig.ignores.add(eleventyVite.getIgnoreDirectory());
diff --git a/node_modules/@11ty/eleventy-plugin-vite/EleventyVite.js b/node_modules/@11ty/eleventy-plugin-vite/EleventyVite.js
index 4c90855..8db76f7 100644
--- a/node_modules/@11ty/eleventy-plugin-vite/EleventyVite.js
+++ b/node_modules/@11ty/eleventy-plugin-vite/EleventyVite.js
@@ -46,9 +46,11 @@ class EleventyVite {
     try {
       let viteOptions = lodashMerge({}, this.options.viteOptions);
       viteOptions.root = tmp;
+      let publicDir = path.join(this.outputDir, viteOptions.publicDir || "public", path.sep);
 
       viteOptions.build.rollupOptions.input = input
         .filter(entry => !!entry.outputPath) // filter out `false` serverless routes
+        .filter(entry => !entry.outputPath.startsWith(publicDir)) // filter out files in public/, vite/rollup will not touch these files and just copy them to the root of your output folder
         .map(entry => {
           if(!entry.outputPath.startsWith(this.outputDir + path.sep)) {
             throw new Error(`Unexpected output path (was not in output directory ${this.outputDir}): ${entry.outputPath}`);
